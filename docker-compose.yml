services:
  api: &base_api
    build:
      context: .
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
      - sidekiq
    networks:
      - mg_network

  api_production:
    <<: *base_api
    image: mg_api:${IMAGE_TAG:-production}
    container_name: mg_api_production
    build:
      dockerfile: ./docker/Dockerfile.production
    restart: always

  api_development:
    <<: *base_api
    image: mg_api:development
    container_name: mg_api_development
    build:
      dockerfile: ./docker/Dockerfile.development
    volumes:
      - .:/app
      - "/app/tmp"
      - bundle_cache:/rails/vendor/bundle

  sidekiq:
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - redis
    env_file: .env
    volumes:
      - .:/app

  db:
    image: postgres
    container_name: mg_db
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - mg_network

  redis:
    image: redis
    container_name: mg_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
    name: mg_db_data
  bundle_cache:

networks:
  mg_network:
    name: mg_network
    driver: bridge
